---
import Layout from "@/layouts/Layout.astro";
import Container from "@/components/ui/Container.astro";
import Heading from "@/components/ui/Heading.astro";
import { requireCustomerAuth } from "@/lib/auth-utils";
import { rawDb } from "@/lib/db";

// Check if user is customer
const authResult = await requireCustomerAuth(Astro);
if (authResult instanceof Response) {
  return authResult;
}

const customerUser = authResult;
const { id } = Astro.params;

if (!id) {
  return Astro.redirect('/customer/orders');
}

// Fetch specific order by ID and verify it belongs to the customer
let order: any = null;
let orderItems: any[] = [];

try {
  const orderResult = await rawDb.execute({
    sql: `
      SELECT o.*, c.first_name, c.last_name, c.email, c.phone_number, c.address, c.city, c.state, c.zip_code
      FROM orders o
      JOIN customers c ON o.customer_id = c.id
      WHERE o.id = ? AND c.email = ?
    `,
    args: [id, customerUser.email]
  });

  if (orderResult.rows.length === 0) {
    return Astro.redirect('/customer/orders');
  }

  order = orderResult.rows[0];

  // Fetch order items
  const itemsResult = await rawDb.execute({
    sql: 'SELECT * FROM order_items WHERE order_id = ?',
    args: [id]
  });

  orderItems = itemsResult.rows;

} catch (error) {
  console.error('Error fetching order details:', error);
  return Astro.redirect('/customer/orders');
}
---

<Layout title={`Order #${order.id}`}>
  <Container width="marginy">
    <div class="max-w-4xl mx-auto">
      <div class="mb-6">
        <a href="/customer/orders" class="btn btn-ghost btn-sm mb-4">
          ‚Üê Back to Orders
        </a>
        <Heading size="xl">Order #{order.id}</Heading>
      </div>

      <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
        <!-- Order Summary -->
        <div class="lg:col-span-2">
          <div class="card bg-base-100 shadow-xl mb-6">
            <div class="card-body">
              <h3 class="card-title mb-4">Order Details</h3>

              <div class="grid grid-cols-2 gap-4 mb-6">
                <div>
                  <p class="text-sm text-base-content/70">Order Date</p>
                  <p class="font-medium">{new Date(order.created_at).toLocaleDateString()}</p>
                </div>
                <div>
                  <p class="text-sm text-base-content/70">Status</p>
                  <div class={`badge ${
                    order.status === 'pending' ? 'badge-warning' :
                    order.status === 'processing' ? 'badge-info' :
                    order.status === 'shipped' ? 'badge-primary' :
                    order.status === 'delivered' ? 'badge-success' :
                    'badge-neutral'
                  }`}>
                    {order.status.charAt(0).toUpperCase() + order.status.slice(1)}
                  </div>
                </div>
              </div>

              <div class="divider">Items Ordered</div>

              <div class="space-y-4">
                {orderItems.map((item) => (
                  <div class="flex justify-between items-center p-4 bg-base-200 rounded-lg">
                    <div class="flex-1">
                      <h4 class="font-semibold">{item.product_name}</h4>
                      <p class="text-sm text-base-content/70">
                        ‚Çπ{Number(item.price).toFixed(2)} √ó {item.quantity}
                      </p>
                    </div>
                    <div class="text-right">
                      <p class="font-bold">‚Çπ{Number(item.total).toFixed(2)}</p>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </div>

          <!-- Shipping Address -->
          <div class="card bg-base-100 shadow-xl">
            <div class="card-body">
              <h3 class="card-title mb-4">Shipping Address</h3>
              <div class="space-y-1">
                <p class="font-medium">{order.first_name} {order.last_name}</p>
                <p>{order.address}</p>
                <p>{order.city}, {order.state} {order.zip_code}</p>
                {order.phone_number && <p>Phone: {order.phone_number}</p>}
              </div>
            </div>
          </div>
        </div>

        <!-- Order Summary Sidebar -->
        <div class="lg:col-span-1">
          <div class="card bg-base-100 shadow-xl sticky top-4">
            <div class="card-body">
              <h3 class="card-title mb-4">Order Summary</h3>

              <div class="space-y-3">
                <div class="flex justify-between">
                  <span>Subtotal</span>
                  <span>‚Çπ{Number(order.subtotal).toFixed(2)}</span>
                </div>
                <div class="flex justify-between">
                  <span>Shipping</span>
                  <span>‚Çπ{Number(order.shipping).toFixed(2)}</span>
                </div>
                <div class="flex justify-between">
                  <span>Tax</span>
                  <span>‚Çπ{Number(order.tax).toFixed(2)}</span>
                </div>
                <div class="divider my-2"></div>
                <div class="flex justify-between font-bold text-lg">
                  <span>Total</span>
                  <span>‚Çπ{Number(order.total).toFixed(2)}</span>
                </div>
              </div>

              <div class="mt-6 space-y-2">
                {order.status === 'delivered' && (
                  <button class="btn btn-primary w-full">
                    Reorder Items
                  </button>
                )}
                <button class="btn btn-outline w-full">
                  Contact Support
                </button>
              </div>

              {order.status === 'shipped' && (
                <div class="mt-4 p-4 bg-info/10 rounded-lg">
                  <h4 class="font-semibold text-info mb-2">üì¶ Tracking Info</h4>
                  <p class="text-sm">Your order is on its way! You'll receive tracking details via email.</p>
                </div>
              )}
            </div>
          </div>
        </div>
      </div>
    </div>
  </Container>
</Layout>