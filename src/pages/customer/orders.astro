---
import Layout from "@/layouts/Layout.astro";
import Container from "@/components/ui/Container.astro";
import Heading from "@/components/ui/Heading.astro";
import { requireCustomerAuth } from "@/lib/auth-utils";
import { rawDb } from "@/lib/db";

// Check if user is customer
const authResult = await requireCustomerAuth(Astro);
if (authResult instanceof Response) {
  return authResult;
}

const customerUser = authResult;

// Fetch customer orders by email
let orders: any[] = [];
let customer: any = null;

try {
  // First find customer by email
  const customerResult = await rawDb.execute({
    sql: 'SELECT * FROM customers WHERE email = ?',
    args: [customerUser.email]
  });

  if (customerResult.rows.length > 0) {
    customer = customerResult.rows[0];

    // Fetch orders for this customer
    const ordersResult = await rawDb.execute({
      sql: `
        SELECT o.*, c.first_name, c.last_name, c.email
        FROM orders o
        JOIN customers c ON o.customer_id = c.id
        WHERE c.email = ?
        ORDER BY o.created_at DESC
      `,
      args: [customerUser.email]
    });

    orders = ordersResult.rows;

    // Fetch order items for each order
    for (let order of orders) {
      const itemsResult = await rawDb.execute({
        sql: 'SELECT * FROM order_items WHERE order_id = ?',
        args: [order.id]
      });
      (order as any).items = itemsResult.rows;
    }
  }
} catch (error) {
  console.error('Error fetching customer orders:', error);
}
---

<Layout title="My Orders">
  <Container width="marginy">
    <div class="max-w-6xl mx-auto">
      <Heading size="xl" class="mb-8">My Orders</Heading>

      {orders.length === 0 ? (
        <div class="card bg-base-100 shadow-xl">
          <div class="card-body text-center">
            <div class="text-6xl mb-4">ðŸ“¦</div>
            <h2 class="text-2xl font-bold mb-4">No Orders Yet</h2>
            <p class="text-base-content/70 mb-6">
              You haven't placed any orders yet. Start shopping to see your orders here!
            </p>
            <a href="/shop" class="btn btn-primary" title="Browse Products">
              Start Shopping
            </a>
          </div>
        </div>
      ) : (
        <div class="space-y-4">
          {orders.map((order) => (
            <div class="card bg-base-100 shadow-sm border border-base-200">
              <div class="card-body p-4">
                {/* Mobile-first header */}
                <div class="flex items-start justify-between mb-3">
                  <div>
                    <h3 class="font-semibold text-base">Order #{order.id}</h3>
                    <p class="text-sm opacity-60">{new Date(order.created_at).toLocaleDateString()}</p>
                  </div>
                  <div class="flex flex-col items-end space-y-1">
                    <div class={`badge ${
                      order.status === 'pending' ? 'badge-warning' :
                      order.status === 'processing' ? 'badge-info' :
                      order.status === 'shipped' ? 'badge-primary' :
                      order.status === 'delivered' ? 'badge-success' :
                      'badge-neutral'
                    }`}>
                      {order.status.charAt(0).toUpperCase() + order.status.slice(1)}
                    </div>
                  </div>
                </div>

                {/* Order summary - Mobile optimized */}
                <div class="grid grid-cols-2 gap-3 text-sm mb-4">
                  <div>
                    <span class="font-medium opacity-70">Total:</span>
                    <p class="font-bold text-primary">â‚¹{Number(order.total).toFixed(2)}</p>
                  </div>
                  <div>
                    <span class="font-medium opacity-70">Items:</span>
                    <p class="font-medium">{order.items.length} item(s)</p>
                  </div>
                  <div>
                    <span class="font-medium opacity-70">Subtotal:</span>
                    <p>â‚¹{Number(order.subtotal).toFixed(2)}</p>
                  </div>
                  <div>
                    <span class="font-medium opacity-70">Shipping:</span>
                    <p>â‚¹{Number(order.shipping).toFixed(2)}</p>
                  </div>
                </div>

                {/* Items - Collapsed for mobile */}
                <div class="mb-4">
                  <details class="collapse collapse-arrow border border-base-200 bg-base-100">
                    <summary class="collapse-title text-sm font-medium">
                      View Items ({order.items.length})
                    </summary>
                    <div class="collapse-content">
                      <div class="space-y-2 pt-2">
                        {order.items.map((item: any) => (
                          <div class="flex justify-between items-center p-2 bg-base-200 rounded text-sm">
                            <div class="flex-1 min-w-0">
                              <p class="font-medium truncate">{item.product_name}</p>
                              <p class="text-xs opacity-60">
                                {item.quantity} Ã— â‚¹{Number(item.price).toFixed(2)}
                              </p>
                            </div>
                            <p class="font-semibold ml-2">â‚¹{Number(item.total).toFixed(2)}</p>
                          </div>
                        ))}
                      </div>
                    </div>
                  </details>
                </div>

                {/* Actions */}
                <div class="flex justify-end space-x-2 pt-3 border-t border-base-200">
                  <a
                    href={`/customer/orders/${order.id}`}
                    class="btn btn-sm btn-primary"
                  >
                    View Details
                  </a>
                  {order.status === 'delivered' && (
                    <button class="btn btn-sm btn-outline">
                      Reorder
                    </button>
                  )}
                </div>
              </div>
            </div>
          ))}
        </div>
      )}

      <div class="mt-8 text-center">
        <div class="divider">Need Help?</div>
        <p class="text-base-content/70 mb-4">
          Have questions about your orders? Contact our support team.
        </p>
        <a href="/contact" class="btn btn-outline">
          Contact Support
        </a>
      </div>
    </div>
  </Container>
</Layout>