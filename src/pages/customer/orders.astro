---
import Layout from "@/layouts/Layout.astro";
import Container from "@/components/ui/Container.astro";
import Heading from "@/components/ui/Heading.astro";
import { requireCustomerAuth } from "@/lib/auth-utils";
import { rawDb } from "@/lib/db";

// Check if user is customer
const authResult = await requireCustomerAuth(Astro);
if (authResult instanceof Response) {
  return authResult;
}

const customerUser = authResult;

// Fetch customer orders by email
let orders: any[] = [];
let customer: any = null;

try {
  // First find customer by email
  const customerResult = await rawDb.execute({
    sql: 'SELECT * FROM customers WHERE email = ?',
    args: [customerUser.email]
  });

  if (customerResult.rows.length > 0) {
    customer = customerResult.rows[0];

    // Fetch orders for this customer
    const ordersResult = await rawDb.execute({
      sql: `
        SELECT o.*, c.first_name, c.last_name, c.email
        FROM orders o
        JOIN customers c ON o.customer_id = c.id
        WHERE c.email = ?
        ORDER BY o.created_at DESC
      `,
      args: [customerUser.email]
    });

    orders = ordersResult.rows;

    // Fetch order items for each order
    for (let order of orders) {
      const itemsResult = await rawDb.execute({
        sql: 'SELECT * FROM order_items WHERE order_id = ?',
        args: [order.id]
      });
      (order as any).items = itemsResult.rows;
    }
  }
} catch (error) {
  console.error('Error fetching customer orders:', error);
}
---

<Layout title="My Orders">
  <Container width="marginy">
    <div class="max-w-6xl mx-auto">
      <Heading size="xl" class="mb-8">My Orders</Heading>

      {orders.length === 0 ? (
        <div class="card bg-base-100 shadow-xl">
          <div class="card-body text-center">
            <div class="text-6xl mb-4">ðŸ“¦</div>
            <h2 class="text-2xl font-bold mb-4">No Orders Yet</h2>
            <p class="text-base-content/70 mb-6">
              You haven't placed any orders yet. Start shopping to see your orders here!
            </p>
            <a href="/shop" class="btn btn-primary" title="Browse Products">
              Start Shopping
            </a>
          </div>
        </div>
      ) : (
        <div class="space-y-6">
          {orders.map((order) => (
            <div class="card bg-base-100 shadow-xl">
              <div class="card-body">
                <div class="flex flex-col lg:flex-row lg:justify-between lg:items-start gap-4">
                  <div class="flex-1">
                    <div class="flex flex-col sm:flex-row sm:items-center gap-2 mb-4">
                      <h3 class="text-xl font-bold">Order #{order.id}</h3>
                      <div class={`badge ${
                        order.status === 'pending' ? 'badge-warning' :
                        order.status === 'processing' ? 'badge-info' :
                        order.status === 'shipped' ? 'badge-primary' :
                        order.status === 'delivered' ? 'badge-success' :
                        'badge-neutral'
                      }`}>
                        {order.status.charAt(0).toUpperCase() + order.status.slice(1)}
                      </div>
                    </div>

                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-6">
                      <div>
                        <p class="text-sm text-base-content/70">Order Date</p>
                        <p class="font-medium">{new Date(order.created_at).toLocaleDateString()}</p>
                      </div>
                      <div>
                        <p class="text-sm text-base-content/70">Total Amount</p>
                        <p class="font-bold text-lg">â‚¹{Number(order.total).toFixed(2)}</p>
                      </div>
                    </div>

                    <div class="mb-4">
                      <h4 class="font-semibold mb-2">Order Items:</h4>
                      <div class="space-y-2">
                        {order.items.map((item: any) => (
                          <div class="flex justify-between items-center p-3 bg-base-200 rounded-lg">
                            <div>
                              <p class="font-medium">{item.product_name}</p>
                              <p class="text-sm text-base-content/70">
                                Quantity: {item.quantity} Ã— â‚¹{Number(item.price).toFixed(2)}
                              </p>
                            </div>
                            <p class="font-semibold">â‚¹{Number(item.total).toFixed(2)}</p>
                          </div>
                        ))}
                      </div>
                    </div>

                    <div class="grid grid-cols-1 sm:grid-cols-3 gap-4 text-sm">
                      <div>
                        <p class="text-base-content/70">Subtotal</p>
                        <p class="font-medium">â‚¹{Number(order.subtotal).toFixed(2)}</p>
                      </div>
                      <div>
                        <p class="text-base-content/70">Shipping</p>
                        <p class="font-medium">â‚¹{Number(order.shipping).toFixed(2)}</p>
                      </div>
                      <div>
                        <p class="text-base-content/70">Tax</p>
                        <p class="font-medium">â‚¹{Number(order.tax).toFixed(2)}</p>
                      </div>
                    </div>
                  </div>

                  <div class="flex flex-col gap-2">
                    <a
                      href={`/customer/orders/${order.id}`}
                      class="btn btn-outline btn-sm"
                    >
                      View Details
                    </a>
                    {order.status === 'delivered' && (
                      <button class="btn btn-primary btn-sm">
                        Reorder
                      </button>
                    )}
                  </div>
                </div>
              </div>
            </div>
          ))}
        </div>
      )}

      <div class="mt-8 text-center">
        <div class="divider">Need Help?</div>
        <p class="text-base-content/70 mb-4">
          Have questions about your orders? Contact our support team.
        </p>
        <a href="/contact" class="btn btn-outline">
          Contact Support
        </a>
      </div>
    </div>
  </Container>
</Layout>