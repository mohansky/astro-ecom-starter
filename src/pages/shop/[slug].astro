---
export const prerender = false; // Server-side rendering for dynamic DB products
import R2ImageFeatureSlider from "@/components/Product/R2ImageFeatureSlider.astro";
import ProductCardPrice from "@/components/Product/ProductCardPrice.astro";
import ProductDescription from "@/components/Product/ProductDescription.astro";
import ProductDetails from "@/components/Product/ProductDetails.astro";
import ProductSpecs from "@/components/Product/ProductSpecs.astro";
import AddToCartButton from "@/components/ui/AddToCartButton.astro";
import Container from "@/components/ui/Container.astro";
import Heading from "@/components/ui/Heading.astro";
import Layout from "@/layouts/Layout.astro";
import ProductSEO from "@/components/SEO/ProductSEO.astro";
import { rawDb, type Product } from "@/lib/db";
import R2Image from "@/components/ui/R2Image.astro";

// Get product by slug from database
const { slug } = Astro.params;

if (!slug) {
  return Astro.redirect("/404");
}

let product: Product | null = null;
try {
  const result = await rawDb.execute({
    sql: "SELECT * FROM products WHERE slug = ? AND isActive = 1",
    args: [slug],
  });

  if (result.rows.length > 0) {
    const row = result.rows[0];
    product = {
      id: row.id as string,
      name: row.name as string,
      slug: row.slug as string,
      description: (row.description as string) || undefined,
      category: row.category as string,
      subcategory: (row.subcategory as string) || undefined,
      price: row.price as number,
      mrp: row.mrp as number,
      discount: (row.discount as number) || 0,
      stock: row.stock as number,
      weight: (row.weight as number) || undefined,
      dimensions: (row.dimensions as string) || undefined,
      imagePath: (row.imagePath as string) || undefined,
      tags: (row.tags as string) || undefined,
      gstPercentage: (row.gstPercentage as number) || 5,
      taxInclusive: Boolean(row.taxInclusive),
      isActive: Boolean(row.isActive),
      featured: Boolean(row.featured),
      createdAt: row.createdAt as string,
      updatedAt: row.updatedAt as string,
    };
  }
} catch (error) {
  console.error("Error fetching product by slug:", error);
}

// If no product found, return 404
if (!product) {
  return Astro.redirect("/404");
}

// SEO meta data
const seoTitle = `${product.name} - ${product.category} | Astro Ecom`;
const seoDescription = product.description
  ? `${product.description.substring(0, 150)}... Available for ₹${product.price}. ${product.stock > 0 ? 'In stock' : 'Out of stock'}.`
  : `Buy ${product.name} in ${product.category} category for ₹${product.price}. Quality products with fast shipping.`;

const breadcrumbs = [
  { name: "Home", url: "/" },
  { name: "Shop", url: "/shop" },
  { name: product.category, url: `/shop?category=${product.category}` },
  { name: product.name, url: `/shop/${product.slug}` }
];

const productImage = product.imagePath
  ? `https://pub-67b76734f5b543b9925c0870089929bb.r2.dev/products/${product.imagePath}/${product.imagePath}.jpg`
  : undefined;
---

<ProductSEO
  title={seoTitle}
  description={seoDescription}
  product={product}
  breadcrumbs={breadcrumbs}
  image={productImage}
  canonical={`${Astro.site}/shop/${product.slug}`}
/>

<Layout>
  <Container width="marginxy">
    <div class="grid lg:grid-cols-2 gap-8">
      <R2Image
        src={`products/${product.imagePath}/${product.imagePath}.jpg`}
        alt={product.name}
        width={600}
        height={600}
      />
      <!-- <R2ImageFeatureSlider subDirectory={product.imagePath} /> -->
      <div class="space-y-10">
        <Heading size="xl" class="mb-10">{product.name}</Heading>
        <ProductDescription description={product.description || ""} />
        <ProductDetails product={product} />
        <ProductSpecs product={product} />
        <ProductCardPrice
          price={product.price}
          mrp={product.mrp}
          discount={product.discount}
        />
        <AddToCartButton
          id={product.id}
          name={product.name}
          price={product.price}
          weight={product.weight || 0}
          gstPercentage={product.gstPercentage}
          taxInclusive={product.taxInclusive}
          image={product.imagePath
            ? `/products/${product.imagePath}/${product.imagePath}.jpg`
            : undefined}
        />
      </div>
    </div>
  </Container>
</Layout>
