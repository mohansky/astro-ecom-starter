---
// src/components/ProductCard.astro
import AddToCartButton from "../ui/AddToCartButton.astro";
import Button from "../ui/Button.astro";
import Heading from "../ui/Heading.astro";
import Paragraph from "../ui/Paragraph.astro";
import R2Image from "../ui/R2Image.astro";
import ProductCardPrice from "./ProductCardPrice.astro";

interface Props {
  id: number | string;
  slugAsParams?: string;
  slug: string;
  published: boolean;
  name: string;
  quantity?: number;
  dimensions?: string;
  weight?: number;
  artisan?: string;
  code?: string;
  description: string;
  images?: string;
  subDirectory?: string;
  category: string;
  material?: string;
  colour?: string | string[];
  mrp: number;
  gst?: number;
  courier?: string | null;
  total?: number;
  sku?: string | null;
  barcode?: string | null;
  // New database product fields
  price?: number;
  discount?: number;
  subcategory?: string;
  featured?: boolean;
  gstPercentage?: number;
  taxInclusive?: boolean;
}
const {
  id,
  slug,
  images,
  subDirectory,
  name,
  category,
  description,
  total,
  mrp,
  weight,
  price,
  discount,
  subcategory,
  featured,
  gstPercentage,
  taxInclusive,
} = Astro.props;
const categoryClass =
  category === "Macrame"
    ? "badge-error"
    : category === "Stitching"
      ? "badge-accent"
      : "";

// Calculate the image path for the cart
const imagePath = images ? `/products/${images}/1.jpg` : undefined;
---

<div class="card bg-base-100">
  <a href={`/shop/${slug}`} class="product-link" title={`View ${name} details`}>
    <figure class="relative">
      {images ? (
        <R2Image
          src={`products/${images}/${images}.jpg`}
          alt={name}
          width={400}
          height={400}
          class="object-cover w-full h-auto"
        />
      ) : (
        <div class="flex items-center justify-center w-full h-64 bg-base-200">
          <div class="text-center">
            <div class="text-6xl mb-4">ðŸ“¦</div>
            <p class="text-base-content/70">No image available</p>
          </div>
        </div>
      )}
      <div class={`badge absolute bottom-2 right-2 z-10 ${categoryClass}`}>
        {category}
      </div>
      {featured && (
        <div class="badge badge-warning absolute top-2 left-2 z-10">
          Featured
        </div>
      )}
    </figure>
    <div class="card-body">
      <div class="tooltip" data-tip={name}>
        <Heading class="card-title line-clamp-1" size="sm">{name}</Heading>
      </div>
      <ProductCardPrice
        total={total}
        price={price}
        mrp={mrp}
        discount={discount}
      />
      <Paragraph class="line-clamp-2 mb-2">
        {description}
      </Paragraph>
      <div class="card-actions flex justify-center items-center gap-4  w-full m-0 px-4">
        <Button href={`/shop/${slug}`} variant="outline" className="flex-1" title={`View details for ${name}`}>
          View Details
        </Button>
        <AddToCartButton
          id={id}
          name={name}
          price={price || total || mrp}
          weight={weight || 0}
          gstPercentage={gstPercentage || 5}
          taxInclusive={taxInclusive || false}
          image={imagePath}
          className="flex-1"
        />
      </div>
    </div>
  </a>
</div>

<script>
  function initProductCards() {
    // Fix links so Add to Cart button doesn't trigger navigation
    document.querySelectorAll(".product-link").forEach((card) => {
      card.addEventListener("click", (e) => {
        // If the click is on or inside the add-to-cart button, don't navigate
        if (
          e.target instanceof Element &&
          (e.target.closest(".add-to-cart") || e.target.closest(".btn-outline"))
        ) {
          e.preventDefault();
        }
      });
    });
  }

  // Initialize when DOM is ready
  document.addEventListener("DOMContentLoaded", initProductCards);

  // For Astro View Transitions
  document.addEventListener("astro:page-load", initProductCards);
</script>
